openapi: 3.0.0
servers:
  - url: 'http://localhost:8000/v2/api'
info:
  description: >-
    This is a sample server Petstore server.  You can find out more about
    Swagger at http://swagger.io or on
    irc.freenode.net, #swagger.  For this sample, you can use the api key
    "special-key" to test the authorization filters
  version: 1.0.0
  title: Swagger Petstore
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
externalDocs:
  description: Find more info here
  url: 'https://swagger.io'
paths:
  '/pet/{petId}':
    get:
      tags:
        - pet
      summary: Find pet by ID
      description: It gets pets
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
            application/xml:
              schema:
                $ref: "#/components/schemas/Pet"
components:
  schemas:
    Category:
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
    Pet:
      required:
        - name
        - photoUrls
      properties:
        id:
          type: integer
          format: int64
        category:
          $ref: "#/components/schemas/Category"
        name:
          type: string
          example: doggie
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: "#/components/schemas/Tag"
        status:
          type: string
          description: pet status in the store
      xml:
        name: Pet
      example:
        id: 12345
        name: Gorilla
    Tag:
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag