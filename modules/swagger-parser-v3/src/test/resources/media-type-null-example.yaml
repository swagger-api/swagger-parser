openapi: "3.0.1"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: https://petstore3.swagger.io/api/v3
paths:
  /pet:
    post:
      tags:
      - pet
      summary: Add a new pet to the store
      operationId: addPet
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
            example:
              id: 10
              name: kitty
              tag: something
        required: true
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
              example: null
  /object-with-null-example:
    get:
      description: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectWithNullExample"
              examples:
                foo:
                  value: '{"foo": "bar"}'
                bar:
                  value: null

  /object-with-null-in-schema-example:
    get:
      description: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectWithNullInSchemaExample"
              examples:
                a:
                  value: 5
                b:
                  value: 'test'
                c:
                  value: true
                d:
                  value: null


  /object-with-null-property-example:
    get:
      description: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectWithNullPropertyExample"

  /string-with-null-example:
    get:
      description: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringWithNullExample"

  /array-with-null-array-example:
    get:
      description: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayWithNullArrayExample"

  /array-with-null-item-example:
    get:
      description: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayWithNullItemExample"

  /arrey-with-null-in-array-example:
    get:
      description: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayWithNullInArrayExample"
components:
  schemas:
    Pet:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string

    ObjectWithNullExample:
      type: object
      properties:
        foo:
          type: string
      nullable: true
      example: null

    ObjectWithNullInSchemaExample:
      type: object
      example:
        a: 5
        b: test
        c: true
        d: null

    ObjectWithNullPropertyExample:
      type: object
      properties:
        a:
          type: integer
          example: 5
        b:
          type: string
          nullable: true
          example: null

    StringWithNullExample:
      type: string
      nullable: true
      example: null

    ArrayWithNullArrayExample:
      type: array
      items:
        type: string
      nullable: true
      example: null

    ArrayWithNullItemExample:
      type: array
      items:
        type: string
        nullable: true
        example: null

    ArrayWithNullInArrayExample:
      type: array
      items:
        type: string
        nullable: true
      example: [foo, null]
