openapi: 3.0.2
info:
  title: VirtServer support for null examples
  version: 1.0.0
servers:
- url: /
paths:
  /object-with-null-example:
    get:
      description: Response should be `null`
      responses:
        "200":
          description: Should be `null`
          content:
            application/json:
              schema:
                type: object
                properties:
                  foo:
                    type: string
                nullable: true
                example: null
  /object-with-null-in-schema-example:
    get:
      description: "Response should be `{..., \"d\": null}`"
      responses:
        "200":
          description: "Should be `{..., \"d\": null}`"
          content:
            application/json:
              schema:
                type: object
                example:
                  a: 5
                  b: test
                  c: true
                  d: null
  /object-with-null-property-example:
    get:
      description: "Response should be `{\"a\": 5, \"b\": null}`"
      responses:
        "200":
          description: "Should be `{\"a\": 5, \"b\": null}`"
          content:
            application/json:
              schema:
                type: object
                properties:
                  a:
                    type: integer
                    example: 5
                  b:
                    type: string
                    nullable: true
                    example: null
  /string-with-null-example:
    get:
      description: Response should be `null`
      responses:
        "200":
          description: Should be `null`
          content:
            application/json:
              schema:
                type: string
                nullable: true
                example: null
  /array-with-null-array-example:
    get:
      description: Response should be `null`
      responses:
        "200":
          description: Should be `null`
          content:
            application/json:
              schema:
                type: array
                nullable: true
                items:
                  type: string
                example: null
  /array-with-null-item-example:
    get:
      description: "Response should be `[null]`"
      responses:
        "200":
          description: "Should be `[null]`"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  nullable: true
                  example: null
  /arrey-with-null-in-array-example:
    get:
      description: "Response should be `[\"foo\", null]`"
      responses:
        "200":
          description: "Should be `[\"foo\", null]`"
          content:
            application/json:
              schema:
                type: array
                example:
                - foo
                - null
                items:
                  type: string
                  nullable: true
  /object-without-null-example:
    get:
      description: Response should be `null`
      responses:
        "200":
          description: Should be `null`
          content:
            application/json:
              schema:
                type: object
                properties:
                  foo:
                    type: string
                nullable: true
  /object-without-null-in-schema-example:
    get:
      description: "Response should be `{..., \"d\": null}`"
      responses:
        "200":
          description: "Should be `{..., \"d\": null}`"
          content:
            application/json:
              schema:
                type: object
                example:
                  a: 5
                  b: test
                  c: true
  /object-without-null-property-example:
    get:
      description: "Response should be `{\"a\": 5, \"b\": null}`"
      responses:
        "200":
          description: "Should be `{\"a\": 5, \"b\": null}`"
          content:
            application/json:
              schema:
                type: object
                properties:
                  a:
                    type: integer
                    example: 5
                  b:
                    type: string
                    nullable: true
  /string-without-null-example:
    get:
      description: Response should be `null`
      responses:
        "200":
          description: Should be `null`
          content:
            application/json:
              schema:
                type: string
                nullable: true
  /array-without-null-array-example:
    get:
      description: Response should be `null`
      responses:
        "200":
          description: Should be `null`
          content:
            application/json:
              schema:
                type: array
                nullable: true
                items:
                  type: string
  /array-without-null-item-example:
    get:
      description: "Response should be `[null]`"
      responses:
        "200":
          description: "Should be `[null]`"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  nullable: true
  /arrey-without-null-in-array-example:
    get:
      description: "Response should be `[\"foo\", null]`"
      responses:
        "200":
          description: "Should be `[\"foo\", null]`"
          content:
            application/json:
              schema:
                type: array
                example:
                - foo
                items:
                  type: string
                  nullable: true
components:
  schemas:
    ObjectWithNullExample:
      type: object
      properties:
        foo:
          type: string
      nullable: true
      example: null
    ObjectWithNullInSchemaExample:
      type: object
      example:
        a: 5
        b: test
        c: true
        d: null
    ObjectWithNullPropertyExample:
      type: object
      properties:
        a:
          type: integer
          example: 5
        b:
          type: string
          nullable: true
          example: null
    StringWithNullExample:
      type: string
      nullable: true
      example: null
    ArrayWithNullArrayExample:
      type: array
      nullable: true
      items:
        type: string
      example: null
    ArrayWithNullItemExample:
      type: array
      items:
        type: string
        nullable: true
        example: null
    ArrayWithNullInArrayExample:
      type: array
      example:
      - foo
      - null
      items:
        type: string
        nullable: true
    ObjectWithoutNullExample:
      type: object
      properties:
        foo:
          type: string
      nullable: true
    ObjectWithoutNullInSchemaExample:
      type: object
      example:
        a: 5
        b: test
        c: true
    ObjectWithoutNullPropertyExample:
      type: object
      properties:
        a:
          type: integer
          example: 5
        b:
          type: string
          nullable: true
    StringWithoutNullExample:
      type: string
      nullable: true
    ArrayWithoutNullArrayExample:
      type: array
      nullable: true
      items:
        type: string
    ArrayWithoutNullItemExample:
      type: array
      items:
        type: string
        nullable: true
    ArrayWithoutNullInArrayExample:
      type: array
      example:
      - foo
      items:
        type: string
        nullable: true
